//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Models
{
    using App_Code;
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.Linq;
    public partial class clsPatent_Issued
    {
        #region Fields
        public static string Patent_Issued_ID = "Patent_Issued_ID";
        public static string Patent_No = "Patent_No";
        public static string Patent_Title = "Patent_Title";
        public static string Country = "Country";
        public static string Year_Of_Issue = "Year_Of_Issue";
        public static string Ownership_Of_Patent = "Ownership_Of_Patent";
        public static string Patent_Granting_Authority = "Patent_Granting_Authority";
        public static string CreatedOn = "CreatedOn";
        public static string CreatedBy = "CreatedBy";
        public static string UpdatedOn = "UpdatedOn";
        public static string UpdatedBy = "UpdatedBy";
        public static string Active_flag = "Active_flag";
        public static string Deleted_flag = "Deleted_flag";
        #endregion
    }


    public partial class Patent_IssuedController
    {
        #region Fields
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Patent_IssuedController()
        {
            this.Patent_Issued_Author = new HashSet<Patent_Issued_AuthorController>();
        }

        public int Patent_Issued_ID { get; set; }
        public string Patent_No { get; set; }
        public string Patent_Title { get; set; }
        public string Country { get; set; }
        public int? Year_Of_Issue { get; set; }
        public string Ownership_Of_Patent { get; set; }
        public string Patent_Granting_Authority { get; set; }
        public DateTime CreatedOn { get; set; }
        public string CreatedBy { get; set; }
        public DateTime? UpdatedOn { get; set; }
        public string UpdatedBy { get; set; }
        public bool? Active_flag { get; set; }
        public bool? Deleted_flag { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Patent_Issued_AuthorController> Patent_Issued_Author { get; set; }
        #endregion

        #region Methods

        #region List

        public static List<Patent_IssuedController> getPatentsAll()
        {
            string strStoredProcedureName = "sp_rep_getPatentsIssuedAll";

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure);

            return ConvertDataTableToObject(dt);
        }


        public static List<Patent_IssuedController> getPatentsByCollege(string college_code)
        {
            string strStoredProcedureName = "sp_rep_getPatentsIssuedByCollege";

            SqlParameter param = new SqlParameter("@college_code", college_code);

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return ConvertDataTableToObject(dt);
        }



        public static List<Patent_IssuedController> getPatentsByDepartment(string dept_code)
        {
            string strStoredProcedureName = "sp_rep_getPatentsIssuedByDepartment";

            SqlParameter param = new SqlParameter("@dept_code", dept_code);

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return ConvertDataTableToObject(dt);
        }



        public static List<Patent_IssuedController> getPatentsByFaculty(int id)
        {
            string strStoredProcedureName = "sp_rep_getPatentsIssuedByFaculty";

            SqlParameter param = new SqlParameter("@id", id);

            DataTable dt = DbAccess.ExecuteQuery(strStoredProcedureName, CommandType.StoredProcedure, param);

            return ConvertDataTableToObject(dt);
        }

        #endregion

        #region Convert DataTable to Object

        private static List<Patent_IssuedController> ConvertDataTableToObject(DataTable dt)
        {
            var list = dt.AsEnumerable()
                .Select(dr =>
                new Patent_IssuedController
                {
                    Patent_Issued_ID = Convert.ToInt32(dr.Field<int>("Patent_Issued_ID")),
                    Patent_No = dr.Field<string>("Patent_No"),                   
                    Patent_Title = dr.Field<string>("Patent_Title"),
                    Country = dr.Field<string>("Country"),
                    Year_Of_Issue = dr.Field<int?>("Year_Of_Issue"),
                    Ownership_Of_Patent = dr.Field<string>("Ownership_Of_Patent"),
                    Patent_Granting_Authority = dr.Field<string>("Patent_Granting_Authority"),                  

                    Deleted_flag = dr.Field<bool?>("Deleted_flag"),
                    Active_flag = dr.Field<bool?>("Active_flag"),
                    CreatedBy = dr.Field<string>("CreatedBy"),
                    CreatedOn = dr.Field<System.DateTime>("CreatedOn")
                }
                ).ToList();

            return list;
        }

        #endregion

        #endregion
    }
}
